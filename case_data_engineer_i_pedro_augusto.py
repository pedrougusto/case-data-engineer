# -*- coding: utf-8 -*-
"""Case Data Engineer I - Pedro Augusto

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eaWInThD4yR2aYJDX4qCY0R1wbVbdFk8
"""

import requests
import pandas as pd
from collections import defaultdict
from datetime import datetime

# Requisição aos endpoints de carrinhos e produtos
url_carrinho = "https://fakestoreapi.com/carts"
response_carrinho = requests.get(url_carrinho)

if response_carrinho.status_code == 200:
    dados_carrinho = response_carrinho.json()
else:
    print("Erro ao acessar a API de carrinhos")

url_produtos = "https://fakestoreapi.com/products"
response_produtos = requests.get(url_produtos)

if response_produtos.status_code == 200:
    dados_produtos = response_produtos.json()
else:
    print("Erro ao acessar a API de produtos")

# Mapeamento do ID do produto para a categoria e dicionário para armazenar o resultado final
produto_para_categoria = {produto['id']: produto['category'] for produto in dados_produtos}

dados_finais = defaultdict(lambda: {'ultima_data': None, 'categorias': defaultdict(int)})

# Processar de cada carrinho para extrair as informações
for carrinho in dados_carrinho:
    user_id = carrinho['userId']
    date_str = carrinho['date'].split('.')[0].rstrip('Z')
    data = datetime.fromisoformat(date_str)

    # Atualizar a data mais recente de adição ao carrinho
    if dados_finais[user_id]['ultima_data'] is None or data > dados_finais[user_id]['ultima_data']:
        dados_finais[user_id]['ultima_data'] = data

    # Contar os produtos por categoria
    for produto in carrinho['products']:
        categoria = produto_para_categoria[produto['productId']]
        dados_finais[user_id]['categorias'][categoria] += produto['quantity']

# Preparar a saída final com a categoria mais frequente
resultado_final = []
for user_id, info in dados_finais.items():
    categoria_mais_freq = max(info['categorias'], key=info['categorias'].get)
    resultado_final.append({
        "user_id": user_id,
        "ultima_data": info['ultima_data'].isoformat(),
        "categoria_mais_produtos": categoria_mais_freq
    })

# Criando o dataFrame com o resultado final
df = pd.dataFrame(resultado_final)

# Salvando em JSON
df.to_json("Case Data Engineer I - Pedro Augusto.json", orient="records")